<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hu Xiaotian&#39;s Blog</title>
  
  <subtitle>Stay hungry, Stay foolish</subtitle>
  <link href="https://hxtzzz.github.io/atom.xml" rel="self"/>
  
  <link href="https://hxtzzz.github.io/"/>
  <updated>2021-01-12T15:29:37.082Z</updated>
  <id>https://hxtzzz.github.io/</id>
  
  <author>
    <name>Hu Xiaotian</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://hxtzzz.github.io/2021/01/12/%E7%AE%97%E6%B3%95-%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
    <id>https://hxtzzz.github.io/2021/01/12/%E7%AE%97%E6%B3%95-%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</id>
    <published>2021-01-12T15:23:00.891Z</published>
    <updated>2021-01-12T15:29:37.082Z</updated>
    
    <content type="html"><![CDATA[<h1 id="三数之和"><a href="#三数之和" class="headerlink" title="三数之和"></a>三数之和</h1><p>###给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有和为 0 且不重复的三元组。<br>注意：答案中不可以包含重复的三元组。</p><p>######Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.<br><a href="https://leetcode-cn.com/problems/3sum">https://leetcode-cn.com/problems/3sum</a><br>####算法一 再暴力解法的基础上，加上分类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; threeSum(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">        ArrayList&lt;List&lt;Integer&gt;&gt; answer = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">if</span> (n &gt;= <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="comment">//先排序,从小到大，如果最负的绝对值小于最小的整数，则不考虑，加强效率。暂时没写</span></span><br><span class="line">            <span class="keyword">int</span> zeroNum = <span class="number">0</span>;</span><br><span class="line">            HashMap&lt;Integer, Integer&gt; Neg = <span class="keyword">new</span> HashMap&lt;Integer, Integer&gt;();</span><br><span class="line">            HashMap&lt;Integer, Integer&gt; Pos = <span class="keyword">new</span> HashMap&lt;Integer, Integer&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[i] == <span class="number">0</span>) &#123;</span><br><span class="line">                    zeroNum++;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums[i] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (Pos.containsKey(nums[i])) &#123;</span><br><span class="line">                        <span class="comment">//最多只需要2个相同的正数，取巧了。</span></span><br><span class="line">                        Pos.put(nums[i], <span class="number">2</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        Pos.put(nums[i], <span class="number">1</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (Neg.containsKey(nums[i])) &#123;</span><br><span class="line">                        <span class="comment">//最多只需要2个负数</span></span><br><span class="line">                        Neg.put(nums[i], <span class="number">2</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        Neg.put(nums[i], <span class="number">1</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//分类</span></span><br><span class="line">            <span class="comment">//3个0</span></span><br><span class="line">            <span class="comment">//相反数 + 1个0</span></span><br><span class="line">            <span class="comment">//2个正，一个负</span></span><br><span class="line">            <span class="comment">//2个负，一个正</span></span><br><span class="line">            <span class="keyword">if</span> (zeroNum &gt;= <span class="number">3</span>) &#123;</span><br><span class="line">                List&lt;Integer&gt; zeros = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                zeros.add(<span class="number">0</span>);</span><br><span class="line">                zeros.add(<span class="number">0</span>);</span><br><span class="line">                zeros.add(<span class="number">0</span>);</span><br><span class="line">                answer.add(zeros);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (!Neg.isEmpty() &amp;&amp; !Pos.isEmpty()) &#123;</span><br><span class="line">                <span class="comment">//确保正负数不为空；</span></span><br><span class="line">                <span class="comment">//相反数</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> keyPos : Pos.keySet()) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> keyNeg : Neg.keySet()) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (keyPos == -keyNeg) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (zeroNum &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">                                <span class="comment">//Arrays.asList方法</span></span><br><span class="line">                                List&lt;Integer&gt; opposite = Arrays.asList(keyNeg, <span class="number">0</span>, keyPos);</span><br><span class="line">                                answer.add(opposite);</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (keyPos == -<span class="number">2</span> * keyNeg &amp;&amp; Neg.get(keyNeg) == <span class="number">2</span>) &#123;</span><br><span class="line">                            List&lt;Integer&gt; oppositePos = Arrays.asList(keyNeg, keyNeg, keyPos);</span><br><span class="line">                            answer.add(oppositePos);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (keyNeg == -<span class="number">2</span> * keyPos &amp;&amp; Pos.get(keyPos) == <span class="number">2</span>) &#123;</span><br><span class="line">                            List&lt;Integer&gt; oppositeNeg = Arrays.asList(keyNeg, keyPos, keyPos);</span><br><span class="line">                            answer.add(oppositeNeg);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//两正一负</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> keyPos1 : Pos.keySet()) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> keyPos2 : Pos.keySet()) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (keyPos2 &lt;= keyPos1) &#123;</span><br><span class="line">                            <span class="comment">//只能从小到大，从而避免重复</span></span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (Neg.containsKey(-keyPos1 - keyPos2)) &#123;</span><br><span class="line">                            List&lt;Integer&gt; pos = Arrays.asList(-keyPos1 - keyPos2, keyPos1, keyPos2);</span><br><span class="line">                            answer.add(pos);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//两负一正</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> keyNeg1 : Neg.keySet()) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> keyNeg2 : Neg.keySet()) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (keyNeg2 &lt;= keyNeg1) &#123;</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (Pos.containsKey(-keyNeg1 - keyNeg2)) &#123;</span><br><span class="line">                            List&lt;Integer&gt; neg = Arrays.asList(keyNeg1, keyNeg2, -keyNeg1 - keyNeg2);</span><br><span class="line">                            answer.add(neg);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> answer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>####算法二 将三数之和转化为二数之和，采用双指针</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; threeSum(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (nums.length &lt; <span class="number">3</span>)</span><br><span class="line">            <span class="keyword">return</span> ans;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">0</span> &amp;&amp; nums[i] == nums[i - <span class="number">1</span>])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">int</span> left = i + <span class="number">1</span>, right = nums.length - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> sum = -nums[i];</span><br><span class="line">            <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[left] + nums[right] == sum) &#123;</span><br><span class="line">                    ans.add(Arrays.asList(nums[i], nums[left], nums[right]));</span><br><span class="line">                    <span class="keyword">while</span> (left &lt; right &amp;&amp; nums[left] == nums[left + <span class="number">1</span>]) left++;</span><br><span class="line">                    <span class="keyword">while</span> (left &lt; right &amp;&amp; nums[right] == nums[right - <span class="number">1</span>]) right--;</span><br><span class="line">                    left++;</span><br><span class="line">                    right--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (nums[left] + nums[right] &gt; sum) &#123;</span><br><span class="line">                    <span class="comment">//这里不进行去重也是可以的</span></span><br><span class="line">                    <span class="comment">//while (left &lt; right &amp;&amp; nums[right] == nums[right - 1]) right--;</span></span><br><span class="line">                    right--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//while (left &lt; right &amp;&amp; nums[left] == nums[left + 1]) left++;</span></span><br><span class="line">                    left++;</span><br><span class="line">                &#125;   </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>显然，方法二较之方法一优秀很多，因为一开始并没有想到很久之前做的双数问题，因此由粗暴解法稍加优化就写了方法一。之后可以继续对双数之和进行研究，从而进一步优化。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;三数之和&quot;&gt;&lt;a href=&quot;#三数之和&quot; class=&quot;headerlink&quot; title=&quot;三数之和&quot;&gt;&lt;/a&gt;三数之和&lt;/h1&gt;&lt;p&gt;###给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>第一篇文章</title>
    <link href="https://hxtzzz.github.io/2020/12/16/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>https://hxtzzz.github.io/2020/12/16/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</id>
    <published>2020-12-16T12:41:43.000Z</published>
    <updated>2020-12-20T13:34:04.630Z</updated>
    
    <content type="html"><![CDATA[<p>#关于此网站的文章</p><p>刚搭完这个网站，在hexo的框架写文章需要用markdown，感觉这个好像还挺好使的样子。</p><p>##软件</p><p>采用了github官方出的atom软件进行写作，可以实时看到预览画面，而且还有语法高亮啥的功能，之后可以慢慢整。<br>软件地址：<a href="https://atom.io/">atom</a></p><p>###软件用法</p><p>也没咋琢磨透，看网上推荐了几个插件，直接安装就行了，感觉这软件贼简洁。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#关于此网站的文章&lt;/p&gt;
&lt;p&gt;刚搭完这个网站，在hexo的框架写文章需要用markdown，感觉这个好像还挺好使的样子。&lt;/p&gt;
&lt;p&gt;##软件&lt;/p&gt;
&lt;p&gt;采用了github官方出的atom软件进行写作，可以实时看到预览画面，而且还有语法高亮啥的功能，之后可以慢慢整</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>test_my_site</title>
    <link href="https://hxtzzz.github.io/2020/12/11/test-my-site/"/>
    <id>https://hxtzzz.github.io/2020/12/11/test-my-site/</id>
    <published>2020-12-11T14:24:11.000Z</published>
    <updated>2020-12-11T14:24:11.881Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://hxtzzz.github.io/2020/12/11/hello-world/"/>
    <id>https://hxtzzz.github.io/2020/12/11/hello-world/</id>
    <published>2020-12-11T14:22:20.206Z</published>
    <updated>2020-12-11T14:22:20.206Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
